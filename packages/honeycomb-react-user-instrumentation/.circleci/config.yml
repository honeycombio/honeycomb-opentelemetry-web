version: 2.1

parameters:
  package-name:
    type: string
    default: ''

filters_always: &filters_always
  filters:
    tags:
      only: /.*/

filters_publish: &filters_publish
  filters:
    tags:
      only: /^v[0-9].*/
    branches:
      ignore: /.*/

executors:
  node:
    docker:
      - image: cimg/node:16.16
  github:
    docker:
      - image: cibuilds/github:0.13.0

jobs:
  git-checkout:
    executor: node
    steps:
      - checkout
      - persist_to_workspace:
          root: packages/<< pipeline.parameters.package-name >>
          paths:
            - ./*

  build:
    executor: node
    steps:
      - attach_workspace:
          at: ./
      - run: npm i
      - run: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - node_modules/*
            - dist/*

  check-format:
    executor: node
    steps:
      - attach_workspace:
          at: ./
      - run: npm run check-format

  lint:
    executor: node
    steps:
      - attach_workspace:
          at: ./
      - run: npm run lint

  test:
    executor: node
    # https://circleci.com/docs/collect-test-data/#jest
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Run tests with JUnit as reporter
          command: npm run test:ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: ./reports/
      - store_artifacts:
          path: ./reports/

  publish_github:
    executor: github
    steps:
      - run:
          name: "GHR Draft"
          command: ghr -draft -n ${CIRCLE_TAG} -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG}

  publish_npm:
    executor: node
    steps:
      - attach_workspace:
          at: /
      - run:
          name: store npm auth token
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: npm publish --access public

workflows:
  build-and-deploy:
    jobs:
      - git-checkout:
          <<: *filters_always
      - check-format:
          <<: *filters_always
          requires:
            - git-checkout
      - lint:
          <<: *filters_always
          requires:
            - git-checkout
      - test:
          <<: *filters_always
          requires:
            - git-checkout
      - build:
          <<: *filters_always
          requires:
            - git-checkout
            - test
      - publish_github:
          <<: *filters_publish
          context: Honeycomb Secrets for Public Repos
          requires:
            - build
      - publish_npm:
          <<: *filters_publish
          context: Honeycomb Secrets for Public Repos
          requires:
            - build
